name: Automated Tests

on:
  pull_request:
    branches: ["main", "dev/main"]
    types: [opened, edited, synchronize, reopened]
  push:
    branches: ["main", "dev/main"]

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
  POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
  POSTGRES_PRISMA_URL: ${{ secrets.POSTGRES_PRISMA_URL }}
  POSTGRES_URL_NON_POOLING: ${{ secrets.POSTGRES_URL_NON_POOLING }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
  CNB_EXCHANGERATE_URI: ${{ secrets.CNB_EXCHANGERATE_URI }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install deps (with cache)
        run: yarn install
        
      - name: Build
        run: yarn build

      - name: Test with coverage
        run: yarn testc
        
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}