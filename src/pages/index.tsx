import type { NextPage } from "next";

import Head from "next/head";

import { signIn, signOut, useSession } from "next-auth/react";
import Layout from "@/components/Layout";
import { Sign } from "crypto";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const user = useSession();
  const router = useRouter();
  return (
    <>
      <Head>
        <title> FLEECA pocket bank </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <main
          className="flex flex-col items-center"
        >
          <h1 className="bg-secondary justify-center text-xl text-center text-white p-4 rounded-lg font-bold w-full"
            data-testid='text-index-name'
          >
            FLEECA pocket bank
          </h1>
          <h2 className="bg-gradient-to-b from-secondary to-primary text-white p-2 pt-4 w-[80%] text-lg rounded-b-full text-center mb-8">
            Experience Seamless Banking with us.
          </h2>
          <section
            className="bg-primary text-white p-2 m-2 md:w-1/2 w-full flex flex-col items-center rounded-tl-lg rounded-br-lg"
          >
            <h3 className="p-2">
              Continue to you account.
            </h3>
            {user.status == 'authenticated' &&
              <button className="bg-secondary rounded-full p-2 px-4 border-secondary border-4 hover:bg-primary"
                onClick={() => router.push('/account')}
              >
                Continue to your account.
              </button>
            }
            {
              user.status != 'authenticated' &&
              <button className="bg-secondary rounded-full p-2 px-4 border-secondary border-4 hover:bg-primary"
                onClick={() => signIn()}
                disabled={user.status == 'loading'}
                data-testid='btn-home-signin'
              >
                SignIn
              </button>
            }
          </section>
          <section
            className="bg-primary text-white p-2 my-4 rounded-tl-lg rounded-br-lg"
          >
            <h3>Discover the Future of Banking with FLEECA Pocket Bank!</h3>

            <p>
              Why settle for traditional banking when you can experience the ultimate convenience and control with FLEECA Pocket Bank's innovative web platform? Here's why thousands of individuals are choosing us as their preferred financial partner:
            </p>

            <ol className="list-decimal list-inside flex flex-row space-4 flex-wrap items-stretch w-auto justify-center marker:text-2xl">
              <li className="bg-secondary p-2 m-2 rounded-lg max-w-sm">
                Accessibility
                <p>
                  Access your finances anytime, anywhere, and from any device. Our web platform allows you to manage your accounts, make transactions, and track your financial progress effortlessly. Say goodbye to long queues and limited branch hours.
                </p>
              </li>

              <li className="bg-secondary p-2 m-2 rounded-lg max-w-sm">
                Security
                <p>
                  At FLEECA Pocket Bank, your security is our top priority. Rest easy knowing that our robust encryption protocols and advanced security measures safeguard your sensitive information. Your peace of mind is our commitment.
                </p>
              </li>
              <li className="bg-secondary p-2 m-2 rounded-lg max-w-sm">
                User-Friendly Interface
                <p>
                  Our web platform is designed with simplicity in mind. Whether you're a tech-savvy individual or just starting your financial journey, our intuitive interface makes it easy to navigate through various banking services and features. Enjoy a seamless and enjoyable banking experience.
                </p>
              </li>
            </ol>
          </section>
        </main>
      </Layout >
    </>
  );

  // return (
  //   <>
  //     <Head>
  //       <title>Create T3 App</title>
  //       <meta name="description" content="Generated by create-t3-app" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>
  //     <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
  //       <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
  //         <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]" data-testid='h-t3app'>
  //           Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
  //         </h1>
  //         <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
  //           <Link
  //             className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
  //             href="https://create.t3.gg/en/usage/first-steps"
  //             target="_blank"
  //           >
  //             <h3 className="text-2xl font-bold">First Steps</h3>
  //             <div className="text-lg">
  //               Just the basics - Everything you need to know to set up your
  //               database and authentication.
  //             </div>
  //           </Link>
  //           <Link
  //             className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
  //             href="https://create.t3.gg/en/introduction"
  //             target="_blank"
  //           >
  //             <h3 className="text-2xl font-bold">Documentation â†’</h3>
  //             <div className="text-lg">
  //               Learn more about Create T3 App, the libraries it uses, and how
  //               to deploy it.
  //             </div>
  //           </Link>
  //         </div>
  //         <div className="flex flex-col items-center gap-2">
  //           <p className="text-2xl text-white">
  //             {hello.data ? hello.data.greeting : "Loading tRPC query..."}
  //           </p>
  //           <AuthShowcase />
  //         </div>
  //       </div>
  //     </main>
  //   </>
  // );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const secretMessage = "fake secret"

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         // eslint-disable-next-line @typescript-eslint/no-misused-promises
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
